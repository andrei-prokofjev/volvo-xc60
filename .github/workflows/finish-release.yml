name: "Finish release"

on:
  workflow_dispatch:
  pull_request:
    #    branches: [ main ]
    types: [ closed ]

jobs:
  create-release-to-main-pull-request:
    if: github.event.pull_request.merged == false
    runs-on: macOS
    steps:
      - name: Parse release version
        id: parse
        run: |
          branch_name=${{ github.ref_name }}
          trimmed_branch=${branch_name#release/}
          echo "version=${trimmed_branch}" >> "$GITHUB_OUTPUT"

#      - name: Create release git tag
#        env:
#          VERSION: ${{ steps.parse.outputs.version }}
#        run: |
#          git tag
#          git tag -a v${{ env.VERSION }} -m "Release v${{ env.VERSION }}"
#          git push origin v${{ env.VERSION }}

      - name: Create main <- release pull request
        id: createPullRequest
        env:
          VERSION: ${{ steps.parse.outputs.version }}
        run: |
          response=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/andrei-prokofjev/volvo-xc60/pulls \
            -d '{
                  "title":"main <- release/${{ env.VERSION }}",
                  "body":"Created by Github action",
                  "head":"${{ github.ref_name }}",
                  "base":"main"
                }')
         
          echo $response | jq '.number' >> "$GITHUB_OUTPUT"

#      - name: Add label to pull request
#        env:
#          PR_NUMBER: ${{ steps.create-release-to-main-pull-request.
#        run: echo ${{ PR_NUMBER }}

  

  create-release:
    if: github.event.pull_request.merged == true
    runs-on: macOS
    steps:
      - name: Parse release version
        id: parse
        run: |
          branch_name=$GITHUB_HEAD_REF
          trimmed_branch=${branch_name#release/}
          echo "version=${trimmed_branch}" >> "$GITHUB_OUTPUT"

      - name: Create release
        env:
          VERSION: ${{ steps.parse.outputs.version }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/andrei-prokofjev/volvo-xc60/releases \
            -d '{
                  "tag_name":"v${{ env.VERSION }}",
                  "target_commitish":"main",
                  "name":"v${{ env.VERSION }}",
                  "body":"Release created by Github action",
                  "draft":false,"prerelease":false,
                  "generate_release_notes":true                
                }'
      

